// Generated by CoffeeScript 2.5.1
(function() {
  var Hs, root,
    indexOf = [].indexOf;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  // !!!! Hotpoor xialiwei root object
  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  $(function() {
    var handleFileSelect, load_folder, load_folder_list, load_folder_meta, load_ready_run;
    console.log("Hello, I am xialiwei.");
    handleFileSelect = function(evt) {
      var formData, target_add_folder_dir, target_add_folder_file, target_add_folder_name, url;
      target_add_folder_file = $(".target_add_folder_file");
      target_add_folder_name = $(".target_add_folder_name").val();
      target_add_folder_dir = $(".target_add_folder_dir").val();
      formData = new FormData();
      formData.append("file", target_add_folder_file[0].files[0]);
      formData.append("folder_name", target_add_folder_name);
      formData.append("dir_name", target_add_folder_dir);
      url = "/*upload_file";
      return $.ajax({
        url: url,
        data: formData,
        dataType: 'json',
        type: 'POST',
        async: false,
        processData: false, // 使数据不做处理
        contentType: false, // 不要设置Content-Type请求头
        success: function(data) {
          console.log(data);
          load_folder(target_add_folder_name, null);
          return $(".target_add_folder_file")[0].outerHTML = $(".target_add_folder_file")[0].outerHTML;
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("change", ".target_add_folder_file", handleFileSelect);
    $("body").on("click", ".add_folder_file", function(evt) {
      return $(".target_add_folder_file").click();
    });
    $("body").on("click", ".add_folder", function(evt) {
      var folder_name;
      folder_name = $(".add_folder_name").val();
      return add_folder(folder_name);
    });
    $("body").on("click", ".add_folder_new", function(evt) {
      return add_folder();
    });
    $("body").on("input propertychange", ".add_folder_name", function(evt) {
      var folder_name;
      folder_name = $(".add_folder_name").val();
      return search_folder_local(folder_name);
    });
    root.search_folder_local = function(folder_name = "") {
      var i, item, items, len, results;
      if (folder_name === "") {
        $(".card_folder_list_item").removeClass("hide");
      }
      items = $(".card_folder_list_item");
      results = [];
      for (i = 0, len = items.length; i < len; i++) {
        item = items[i];
        if ($(item).text().indexOf(folder_name) === -1) {
          results.push($(item).addClass("hide"));
        } else {
          results.push($(item).removeClass("hide"));
        }
      }
      return results;
    };
    root.add_folder = function(folder_name = "") {
      var url;
      if (folder_name === "") {
        folder_name = "新建文件夹";
      }
      url = "/*add_folder";
      return $.ajax({
        url: url,
        data: {
          folder_name: folder_name
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          console.log(data);
          return load_folder_list();
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("click", ".card_folder_list_item", function(evt) {
      var k, new_folder_name, old_folder_name, v;
      old_folder_name = $(".current_folder_name").text;
      k = $(this).attr("data-k");
      v = $(this).attr("data-v");
      $(".current_folder_name").text(k);
      $(".add_folder_file").removeClass("hide");
      $(".target_add_folder_file")[0].outerHTML = $(".target_add_folder_file")[0].outerHTML;
      $(".target_add_folder_name").val(k);
      $(".target_add_folder_dir").val("/");
      new_folder_name = k;
      if (old_folder_name !== new_folder_name) {
        $(".card_content_list").empty();
      }
      return load_folder(k, v);
    });
    load_folder = function(folder_name = null, folder_meta_hash = null) {
      var url;
      if (folder_name === null || folder_name === "") {
        return;
      }
      url = "/*get_folder";
      return $.ajax({
        url: url,
        data: {
          folder_name: folder_name,
          t: (new Date()).getTime()
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          console.log(data);
          folder_meta_hash = data.meta_hash;
          return load_folder_meta(folder_name, folder_meta_hash);
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    load_folder_meta = function(folder_name = null, folder_meta_hash = null) {
      var i, item, len, oldlist, oldpathlist, url;
      // $(".card_content_list").empty()
      oldlist = $(".card_content_list").find(".card_content_list_item");
      oldpathlist = [];
      for (i = 0, len = oldlist.length; i < len; i++) {
        item = oldlist[i];
        oldpathlist.push($(item).find(".card_content_list_item_img").attr("src"));
      }
      if (folder_name === null || folder_meta_hash === null || folder_name === "" || folder_meta_hash === "") {
        return;
      }
      url = "/*get_meta";
      return $.ajax({
        url: url,
        data: {
          folder_meta_hash: folder_meta_hash,
          t: (new Date()).getTime()
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var file_type, k, k_list, newpathlist, pre_html, ref, ref1, ref2, ref3, results, v;
          console.log(data);
          if (data === "no storage config") {
            return;
          }
          if (data.items != null) {
            newpathlist = [];
            ref = data.items;
            results = [];
            for (k in ref) {
              v = ref[k];
              k_list = k.split(".");
              pre_html = "";
              file_type = k_list[k_list.length - 1];
              if ((ref1 = file_type.toLocaleLowerCase()) === "jpg" || ref1 === "jpeg" || ref1 === "gif" || ref1 === "png" || ref1 === "webp" || ref1 === "bmp") {
                pre_html = `<img class="card_content_list_item_img" src="/${folder_name}/${k}">`;
              } else if ((ref2 = file_type.toLocaleLowerCase()) === "mov" || ref2 === "m4a" || ref2 === "mp4") {
                pre_html = `<video class="card_content_list_item_img" controls src="/${folder_name}/${k}">`;
              }
              newpathlist.push(`/${folder_name}/${k}`);
              if (ref3 = `/${folder_name}/${k}`, indexOf.call(oldpathlist, ref3) < 0) {
                results.push($(".card_content_list").append(`<div class="card_content_list_item">
    ${pre_html}
    <div class="card_content_list_item_tools">
        <a href="/${folder_name}/${k}">下载</a>
    </div>
</div>`));
              } else {
                results.push(void 0);
              }
            }
            return results;
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    load_folder_list = function() {
      var url;
      $(".card_folder_list").empty();
      url = "/*get_folders";
      return $.ajax({
        url: url,
        data: null,
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var k, ref, results, v;
          console.log(data);
          ref = data.folders;
          results = [];
          for (k in ref) {
            v = ref[k];
            results.push($(".card_folder_list").append(`<div class="card_folder_list_item" data-k="${k}" data-v="${v}">${k}</div>`));
          }
          return results;
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    load_ready_run = function() {
      return load_folder_list();
    };
    return $(window).on("load", function(evt) {
      return load_ready_run();
    });
  });

}).call(this);
